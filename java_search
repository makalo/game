package makalo;
import java.util.List;import java.io.BufferedReader;import java.io.File;import java.io.FileInputStream;import java.io.InputStreamReader;import java.io.Reader; import org.apache.lucene.analysis.Analyzer;import org.apache.lucene.analysis.standard.StandardAnalyzer;import org.apache.lucene.document.Document;import org.apache.lucene.document.Field;import org.apache.lucene.document.Field.Store;import org.apache.lucene.document.StringField;import org.apache.lucene.document.TextField;import org.apache.lucene.index.IndexWriter;import org.apache.lucene.index.IndexWriterConfig;import org.apache.lucene.index.IndexWriterConfig.OpenMode;import org.apache.lucene.store.Directory;import org.apache.lucene.store.FSDirectory;import org.apache.lucene.util.Version; public class LuceneIndex {  // 索引器 private IndexWriter writer = null;  public LuceneIndex(String indexStorePath) {  try {   // 索引文件的保存位置   Directory dir = FSDirectory.open(new File(indexStorePath));   // 分析器   Analyzer analyzer = new StandardAnalyzer(Version.LUCENE_4_9);   // 配置类   IndexWriterConfig iwc = new IndexWriterConfig(Version.LUCENE_4_9, analyzer);   iwc.setOpenMode(OpenMode.CREATE);// 创建模式 OpenMode.CREATE_OR_APPEND 添加模式   writer = new IndexWriter(dir, iwc);  } catch (Exception e) {   e.printStackTrace();  } }  // 将要建立索引的文件构造成一个Document对象，并添加一个域"content" private Document getDocument(File file) throws Exception {  Document doc = new Document();   //FileInputStream is = new FileInputStream(file);  //Reader reader = new BufferedReader(new InputStreamReader(is));  // 字符串 StringField LongField TextField  List list=null;  String type = file.getName().substring(file.getName().lastIndexOf(".")+1);  if("xlsx".equalsIgnoreCase(type)){   list = (List) ReadFile.readExcel2007(file);  }    System.out.println(((List<String>) list.get(1)).get(2));  System.out.println(list.size());  System.out.println(((List<String>) list.get(1)).size());  for(int i=0;i<list.size()-1;i++)          {//System.out.println(((List<String>) list.get(0)).get(i));           for (int j=0;j<((List<String>) list.get(i)).size()-2;j++)           {            System.out.println(((List<String>) list.get(0)).get(j));            doc.add(new TextField(((List<String>) list.get(0)).get(j),((List<String>) list.get(i+1)).get(j), Store.YES));           }          }  //Field pathField = new StringField("path", file.getAbsolutePath(), Field.Store.YES);  //Field contenField = new TextField("功能ID", "8193",Store.YES);  // 添加字段  //doc.add(contenField);  //doc.add(pathField);  return doc; }  public void writeToIndex(String indexFilePath) throws Exception {  File folder = new File(indexFilePath);   if (folder.isDirectory()) {   String[] files = folder.list();   for (int i = 0; i < files.length; i++) {    File file = new File(folder, files[i]);    Document doc = getDocument(file);    System.out.println("正在建立索引 : " + file + "");    writer.addDocument(doc);   }  } }  public void close() throws Exception {  writer.close(); }}
